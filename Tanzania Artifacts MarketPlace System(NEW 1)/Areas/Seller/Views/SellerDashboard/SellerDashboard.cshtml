@using Tanzania_Artifacts_MarketPlace_System_NEW_1_.Areas.Seller.SellerViewModel
@model SellerDashboardVM
<h1 style="color:green">✅ Seller Dashboard Loaded with Layout</h1>

@{
    ViewData["Title"] = "Seller Dashboard";
    var chartLabels = string.Join(",", ((IEnumerable<dynamic>)ViewBag.ChartData).Select(d => $"'{System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName((int)d.Month)}'"));
    var chartCounts = string.Join(",", ((IEnumerable<dynamic>)ViewBag.ChartData).Select(d => d.Count));
    var chartRevenue = string.Join(",", ((IEnumerable<dynamic>)ViewBag.ChartData).Select(d => d.Count * 100000));
}

<div class="container-fluid px-4 py-4">
    <h2 class="mb-4 fw-bold text-center">Seller Dashboard</h2>

    <!-- Metrics Summary Cards -->
    <div class="row g-4 mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm border-0">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted">Total Orders</h6>
                        <h4 class="fw-bold">@Model.TotalOrders</h4>
                    </div>
                    <i class="bi bi-bag-check display-5 text-primary"></i>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-0">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted">Total Revenue</h6>
                        <h4 class="fw-bold text-success">TSh @Model.TotalRevenue.ToString("N0")</h4>
                    </div>
                    <i class="bi bi-cash-coin display-5 text-success"></i>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-0">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted">Products Sold</h6>
                        <h4 class="fw-bold">@Model.TotalProductsSold</h4>
                    </div>
                    <i class="bi bi-box-seam display-5 text-warning"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row g-4 mb-4">
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-white fw-semibold">Monthly Orders</div>
                <div class="card-body">
                    <canvas id="ordersChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-white fw-semibold">Revenue Trend</div>
                <div class="card-body">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Products Section -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-white fw-semibold">Top Selling Products</div>
        <div class="card-body">
            <ul class="list-group list-group-flush">
                @foreach (var p in Model.TopProducts)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@p.ProductName</span>
                        <span class="badge bg-success rounded-pill">@p.QuantitySold sold</span>
                    </li>
                }
            </ul>
        </div>
    </div>

    <!-- Recent Orders Section -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-white border-bottom">
            <h5 class="mb-0 fw-semibold">Recent Orders</h5>
        </div>
        <div class="card-body p-0">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>Customer</th>
                        <th>Total</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.RecentOrders)
                    {
                        <tr>
                            <td>#@order.Id</td>
                            <td>@order.OrderDate.ToLocalTime().ToString("dd MMM yyyy")</td>
                            <td>@order.User?.FirstName</td>
                            <td>TSh @order.TotalAmount.ToString("N0")</td>
                            <td>
                                <span class="badge bg-@GetBadgeClass(order.Status)">@order.Status</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx1 = document.getElementById('ordersChart').getContext('2d');
        const ordersChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(chartLabels)],
                datasets: [{
                    label: 'Orders',
                    data: [@Html.Raw(chartCounts)],
                    backgroundColor: '#0d6efd'
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                    tooltip: { enabled: true }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const ctx2 = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: [@Html.Raw(chartLabels)],
                datasets: [{
                    label: 'Revenue (TSh)',
                    data: [@Html.Raw(chartRevenue)],
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25,135,84,0.2)',
                    fill: true,
                    tension: 0.3
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                    tooltip: { enabled: true }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

@functions {
    string GetBadgeClass(OrderStatus status) => status switch
    {
        OrderStatus.Ordered => "warning",
        OrderStatus.Shipped => "info",
        OrderStatus.Delivered => "success",
        OrderStatus.Cancelled => "danger",
        _ => "secondary"
    };
}
