@model Tanzania_Artifacts_MarketPlace_System_NEW_1_.ViewModel.CheckoutVM

@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["Errors"] != null)
{
    <div class="alert alert-danger">
        @TempData["Errors"]
    </div>
}


<div class="container py-5">
    <div class="card shadow-lg border-0 rounded-4 animate__animated animate__fadeIn">
        <div class="card-body p-4">
            <h2 class="fw-bold text-primary mb-4">
                <i class="bi bi-cart-check me-2"></i> Checkout
            </h2>

            <!-- ✅ Checkout Form -->
            <form id="checkoutForm" asp-action="PlaceOrder" asp-controller="Order" method="post" class="row gy-4 needs-validation" novalidate onsubmit="return handleCheckout(event)">
                <input type="hidden" name="ShippingCity" id="shippingCity" />
                <input type="hidden" name="PaymentMethod" id="selectedPaymentMethod" />
                <input type="hidden" id="orderId" name="orderId" value="@Model.OrderId" />

                <!-- Shipping City -->
                <div class="col-md-6">
                    <label class="form-label">Shipping City</label>
                    <input type="text" name="ShippingCityInput" class="form-control shadow-sm" placeholder="Enter your city" required />
                    <div class="invalid-feedback">Shipping city is required.</div>
                </div>

                <!-- Payment Method -->
                <div class="col-md-6">
                    <label class="form-label">Payment Method</label>
                    <select class="form-select shadow-sm" name="paymentMethod" required>
                        <option value="" selected disabled>-- Select --</option>
                        <option value="CashOnDelivery">Cash on Delivery</option>
                        <option value="MobileMoney">Mobile Money</option>
                        <option value="Paypal">PayPal</option>
                    </select>
                    <div class="invalid-feedback">Please select a payment method.</div>
                </div>

                <!-- Order Summary -->
                <div class="col-12">
                    <h4 class="fw-bold mt-4 mb-3">
                        <i class="bi bi-bag-check-fill me-1 text-success"></i> Order Summary
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var item in Model.Items)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center shadow-sm rounded mb-2">
                                <span>
                                    <strong>@item.Product.Name</strong> <small class="text-muted">x @item.Quantity</small>
                                </span>
                                <span class="text-success fw-semibold">TSh @((item.Product.Price * item.Quantity).ToString("N0"))</span>
                            </li>
                        }
                        <li class="list-group-item d-flex justify-content-between bg-light shadow-sm">
                            <span class="fw-bold">Total</span>
                            <span class="fw-bold text-primary">TSh @Model.TotalAmount.ToString("N0")</span>
                        </li>
                    </ul>
                </div>

                <!-- Submit Button -->
                <div class="col-12 text-end">
                    <button type="submit" class="btn btn-success px-4 py-2 shadow-sm">
                        <i class="bi bi-credit-card-2-front-fill me-1"></i> Place Order
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function handleCheckout(e) {
            const paymentMethod = document.querySelector('select[name="paymentMethod"]').value;
            const shippingCity = document.querySelector('input[name="ShippingCityInput"]').value;

            if (!paymentMethod || !shippingCity) {
                alert("Please fill in all fields.");
                e.preventDefault(); // prevent submit if validation fails
                return false;
            }

            // Set hidden values
            document.getElementById("shippingCity").value = shippingCity;
            document.getElementById("selectedPaymentMethod").value = paymentMethod;

            if (paymentMethod === "Paypal") {
                e.preventDefault(); // prevent default only for PayPal, so you can handle it custom way

                const amount = '@Model.TotalAmount';
                const orderId = document.getElementById("orderId").value;

                const form = document.createElement("form");
                form.method = "post";
                form.action = "/Payment/PayWithPayPal";

                const amtInput = document.createElement("input");
                amtInput.type = "hidden";
                amtInput.name = "amount";
                amtInput.value = amount;

                const orderIdInput = document.createElement("input");
                orderIdInput.type = "hidden";
                orderIdInput.name = "orderId";
                orderIdInput.value = orderId;

                form.appendChild(amtInput);
                form.appendChild(orderIdInput);
                document.body.appendChild(form);
                form.submit();

                return false;
            }

            // For other payment methods, allow normal form submit without preventing default
            // So just do nothing here, the form will submit as usual.
            return true;
        }
    </script>
}
